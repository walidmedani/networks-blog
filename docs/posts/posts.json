[
  {
    "path": "posts/2022-05-14-bolivia/",
    "title": "Bolivia",
    "description": "A Network Analysis of the 2019 Bolivian Political Crisis.",
    "author": [
      {
        "name": "Walid Medani",
        "url": "https://walidmedani.github.io/networks-blog/"
      }
    ],
    "date": "2022-05-01",
    "categories": [],
    "contents": "\r\nIntroduction\r\nIn the wake of Bolivia’s 2019 general elections, the Organization of American States (OAS) claimed in its report that the socialist party of Evo Morales was rigging the election. As a result, protests from the opposing party erupted, eventually leading to a coup supported by the police and military. As a result, Jeanine Áñez of the opposition Democrat Social Movement, assumed the interim presidency of Bolivia. Evo Morales and other members of his party sought political asylum in Mexico citing concerns over their livelihood.\r\nMonths later, multiple studies analyzing the election results found no statistical evidence for fraud and also pointed out errors in the coding of OAS’s report. With concerns of the OAS’s history of being a US sponsored organization that was utilized to stop communism in Latin America during the cold war; many left-wing proponents believed that the US backed right-wing coup of Bolivia was a ploy to exploit the country’s lithium reserves — its deposits being the second largest in the world.\r\nEarlier this year, Morales’s party won the re-election by a landslide and ousted Jeanine Áñez’s interim presidency that was marred by controversy and massacres. But concern over the US government’s and US media’s actions and influence still looms.\r\nData\r\nTo analyze the network structure of this political crisis, 63,965 tweets were retrieved from the Academic Twitter API. Tweets were collected from the month of the 2019 crisis to the month before the 2020 election (09/10/2019 - 09/18/2020). The search query string only including tweets that matched two keywords from the following list: bolivia, coup, democracy, evo, morales, anez, jeanine.\r\nThe original data was in RDS format and converted into an edgelist representing the universe of cases. Data was transformed by only including tweets that mention another user in the dataframe column “mention_screen_name” with a minimum of 2 retweets. There are 5,539 nodes and what constitutes a node within this dataset is the original sender of a tweet. Ties are defined when a “sender” has a tweet mentioning another user. There are 6,986 ties and the ties are weighted by the count of retweets.\r\nDescriptive Statistics\r\nMany users are interconnected within this sparsely connected graph due to direct ties measuring mentions rather than retweets, meaning the authors had to mention the user within their tweet rather than simply retweeting. There are 966 total components with the main component having 3327 points whereas the minor component only contains 14. The network is fairly centralized (49%) with a small number of nodes representing the information flow, however the centralization score almost doubles when we focus on the main component. The low global transivity score showcases that there isn’t a shared attribute (ideology, opinions, etc.) clustering nodes together when they’re mentioning users in their tweets. This transitivity trend continues at the local level of the ego network (when users mention each other) even when the proportion of mutual connections is measured via reciprocity.\r\nThe average number of steps along the shortest paths of network nodes is 27.6, showing an extent of inefficiency in information. The distribution of degrees shows a lack of statistical dispersion, with the average user only having one link for both mentioning another twitter user or receiving a mention.\r\n\r\n\r\n# DESCRIPTIVE STATS\r\n\r\nvcount(mt)\r\n\r\n\r\n[1] 5539\r\n\r\necount(mt)\r\n\r\n\r\n[1] 6986\r\n\r\ngraph.density(mt, loops = TRUE)\r\n\r\n\r\n[1] 0.0002277015\r\n\r\nigraph::components(mt)$no\r\n\r\n\r\n[1] 966\r\n\r\nhead(igraph::components(mt)$csize)\r\n\r\n\r\n[1]    2    2    3 3327    2    2\r\n\r\ncentr_degree(mt, mode = c(\"in\"), loops = TRUE,normalized = TRUE)$centralization\r\n\r\n\r\n[1] 0.4873129\r\n\r\nmaincomponent <- induced_subgraph(\r\n  mt, V(mt)[components(mt)$membership == which.max(components(mt)$csize)]\r\n)\r\ncentr_degree(maincomponent, mode = c(\"in\"), loops = TRUE,normalized = TRUE)$centralization\r\n\r\n\r\n[1] 0.8112694\r\n\r\ntransitivity(mt, type = \"global\")\r\n\r\n\r\n[1] 0.0006518992\r\n\r\ntransitivity(mt, type=\"average\")\r\n\r\n\r\n[1] 0.04946828\r\n\r\nreciprocity(mt)\r\n\r\n\r\n[1] 0.005725737\r\n\r\nigraph::dyad.census(mt)\r\n\r\n\r\n$mut\r\n[1] 18\r\n\r\n$asym\r\n[1] 5116\r\n\r\n$null\r\n[1] 15332357\r\n\r\nigraph::triad_census(mt) \r\n\r\n\r\n [1] 28280145269    24949093     2125336        6977      665147\r\n [6]        3462         116         335         128           0\r\n[11]           7           6           7           4           2\r\n[16]           0\r\n\r\naverage.path.length(mt)\r\n\r\n\r\n[1] 27.597\r\n\r\nhead(igraph::degree(mt))\r\n\r\n\r\n     DFalconeti   joshua__frank  goffmansmasker    AleFerruzcaL \r\n              1               1               1               6 \r\n      SabatoFan Maryest66760646 \r\n              1               1 \r\n\r\n# Degrees Histogram\r\nmt.nodes <- data.frame(name=V(mt)$name, degree=igraph::degree(mt)) %>%\r\n  arrange(desc(degree))\r\n\r\n\r\nsummary(mt.nodes)\r\n\r\n\r\n     name               degree        \r\n Length:5539        Min.   :   1.000  \r\n Class :character   1st Qu.:   1.000  \r\n Mode  :character   Median :   1.000  \r\n                    Mean   :   2.522  \r\n                    3rd Qu.:   1.000  \r\n                    Max.   :2700.000  \r\n\r\nhist(mt.nodes$degree, main=\"2019 Bolivian Political Crisis (Degrees)\", xlab = \"\") \r\n\r\n\r\n\r\n# scale_fill_manual(values \r\n\r\nhead(closeness(mt))\r\n\r\n\r\n     DFalconeti   joshua__frank  goffmansmasker    AleFerruzcaL \r\n      0.5000000       0.5000000       0.5000000       0.0062500 \r\n      SabatoFan Maryest66760646 \r\n      0.5000000       0.1428571 \r\n\r\nmt.nodes <- mt.nodes %>%\r\n    mutate(indegree=igraph::degree(mt, mode=\"in\", loops=TRUE),\r\n           outdegree=igraph::degree(mt, mode=\"out\", loops=TRUE))\r\nsummary(mt.nodes) %>% \r\nkbl() %>%\r\nkable_material_dark(c(\"striped\", \"hover\")) %>% \r\nscroll_box(width = \"100%\", height = \"auto\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nname\r\n\r\n\r\ndegree\r\n\r\n\r\nindegree\r\n\r\n\r\noutdegree\r\n\r\n\r\n\r\n\r\nLength:5539\r\n\r\n\r\nMin. : 1.000\r\n\r\n\r\nMin. : 0.000\r\n\r\n\r\nMin. : 0.000\r\n\r\n\r\n\r\n\r\nClass :character\r\n\r\n\r\n1st Qu.: 1.000\r\n\r\n\r\n1st Qu.: 0.000\r\n\r\n\r\n1st Qu.: 0.000\r\n\r\n\r\n\r\n\r\nMode :character\r\n\r\n\r\nMedian : 1.000\r\n\r\n\r\nMedian : 0.000\r\n\r\n\r\nMedian : 1.000\r\n\r\n\r\n\r\n\r\nNA\r\n\r\n\r\nMean : 2.522\r\n\r\n\r\nMean : 1.261\r\n\r\n\r\nMean : 1.261\r\n\r\n\r\n\r\n\r\nNA\r\n\r\n\r\n3rd Qu.: 1.000\r\n\r\n\r\n3rd Qu.: 1.000\r\n\r\n\r\n3rd Qu.: 1.000\r\n\r\n\r\n\r\n\r\nNA\r\n\r\n\r\nMax. :2700.000\r\n\r\n\r\nMax. :2700.000\r\n\r\n\r\nMax. :464.000\r\n\r\n\r\n\r\nData Visualization\r\nThe first graph shows the overall network graph, when a user mentions their own username.\r\n\r\n\r\n#VIZ\r\nkcore <- coreness(mt, mode=\"all\") \r\ntwocore <- induced_subgraph(mt, kcore>=1)\r\n\r\ngraph1 <- visIgraph(twocore,idToLabel = TRUE,layout = \"layout_nicely\") %>%\r\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) \r\ngraph1\r\n\r\n\r\n\r\n\r\nHere kcore = 4, to identify a smaller subset of interconnected users that have at least 4 edges with other users in the core.\r\n\r\n\r\n#VIZ 2\r\nkcore4 <- coreness(mt, mode=\"all\") \r\nfourcore <- induced_subgraph(mt, kcore4>=4)\r\n\r\ngraph2 <- visIgraph(fourcore,idToLabel = TRUE,layout = \"layout_nicely\") %>%\r\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE)\r\ngraph2\r\n\r\n\r\n\r\n\r\nThis visualization lowers kcore = 1 but focuses on the main component.\r\n\r\n\r\n#comp viz\r\n\r\nkcore1 <- coreness(maincomponent, mode=\"all\") \r\nonecore <- induced_subgraph(maincomponent, kcore1>=1)\r\n\r\ngraph3 <- visIgraph(onecore,idToLabel = TRUE,layout = \"layout_nicely\") %>%\r\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) \r\ngraph3\r\n\r\n\r\n\r\n\r\nProminent Nodes\r\nMeasuring popularity/status with in/out degree centrality made the most sense for this dataset due to it being directed and is simply looking at mentions of usernames. The ousted president Evo Morales (evoespueblo) received the most mentions by twitter users followed by La Razón, one of the largest newspaper publications within Bolivia.\r\n\r\n\r\nindegree_mt <- sort(degree(mt,mode = \"in\"),decreasing = TRUE)\r\nindegree_mt[1:10] %>% #show the top 10 users ranked by in-degree \r\nkbl() %>%\r\nkable_material_dark(c(\"striped\", \"hover\")) %>% \r\nscroll_box(width = \"100%\", height = \"auto\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nx\r\n\r\n\r\nevoespueblo\r\n\r\n\r\n2700\r\n\r\n\r\nLaRazon_Bolivia\r\n\r\n\r\n92\r\n\r\n\r\nJeanineAnez\r\n\r\n\r\n74\r\n\r\n\r\nentrammbasaguas\r\n\r\n\r\n65\r\n\r\n\r\nAlmagro_OEA2015\r\n\r\n\r\n58\r\n\r\n\r\nyeidckol\r\n\r\n\r\n54\r\n\r\n\r\nCarmenEGonzale2\r\n\r\n\r\n40\r\n\r\n\r\nDiazCanelB\r\n\r\n\r\n38\r\n\r\n\r\nJohnMAckerman\r\n\r\n\r\n34\r\n\r\n\r\nCMonteroOficial\r\n\r\n\r\n29\r\n\r\n\r\n\r\nAnd below we see the users who most mentioned other users, finding a mix of journalists, supporters, and opponents of Evo Morales.\r\n\r\n\r\noutdegree_mt <- sort(degree(mt,mode = \"out\"),decreasing = TRUE)\r\noutdegree_mt[1:10] %>% #show the top 10 users ranked by out-degree\r\nkbl() %>%\r\nkable_material_dark(c(\"striped\", \"hover\")) %>% \r\nscroll_box(width = \"100%\", height = \"auto\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nx\r\n\r\n\r\nGiovannaZeball4\r\n\r\n\r\n464\r\n\r\n\r\nrayleon1515\r\n\r\n\r\n295\r\n\r\n\r\nDAVlD51\r\n\r\n\r\n157\r\n\r\n\r\nMonicaAparicioA\r\n\r\n\r\n107\r\n\r\n\r\nFranzRBarriosG\r\n\r\n\r\n96\r\n\r\n\r\nBenjaminNorton\r\n\r\n\r\n72\r\n\r\n\r\nLibverd\r\n\r\n\r\n46\r\n\r\n\r\nt_taeki\r\n\r\n\r\n43\r\n\r\n\r\nelinforman_t\r\n\r\n\r\n38\r\n\r\n\r\nYaotlAltan\r\n\r\n\r\n33\r\n\r\n\r\n\r\nBelow are users who acted as a bridge between the other nodes within the network by measuring betweenness centrality.\r\n\r\n\r\n# BETWEENESS \r\nbt <- sort(betweenness(mt, directed=T), decreasing = TRUE)\r\nbt[1:10] %>%  #show the top 10 nodes by betweenness centrality \r\nkbl() %>%\r\nkable_material_dark(c(\"striped\", \"hover\")) %>% \r\nscroll_box(width = \"100%\", height = \"auto\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nx\r\n\r\n\r\nGiovannaZeball4\r\n\r\n\r\n6259.0\r\n\r\n\r\nCarmenEGonzale2\r\n\r\n\r\n4953.5\r\n\r\n\r\nMonicaAparicioA\r\n\r\n\r\n4845.0\r\n\r\n\r\nalopezescarre\r\n\r\n\r\n3462.5\r\n\r\n\r\nDAVlD51\r\n\r\n\r\n3052.0\r\n\r\n\r\nmarcoci56595060\r\n\r\n\r\n2717.0\r\n\r\n\r\nLibverd\r\n\r\n\r\n2636.5\r\n\r\n\r\nrayleon1515\r\n\r\n\r\n2627.0\r\n\r\n\r\nentrammbasaguas\r\n\r\n\r\n2320.0\r\n\r\n\r\nAmp_Bald63\r\n\r\n\r\n1166.0\r\n\r\n\r\n\r\nUsing Google’s PageRank algorithm we can find the biggest influencers in this network through the ranks of search results.\r\n\r\n\r\npr <- page_rank(mt, algo = c(\"prpack\"))\r\npr <- sort(pr$vector,decreasing = TRUE)\r\npr[1:10] %>% #show the top 10 users ranked by PageRank\r\nkbl() %>%\r\nkable_material_dark(c(\"striped\", \"hover\")) %>% \r\nscroll_box(width = \"100%\", height = \"auto\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nx\r\n\r\n\r\nevoespueblo\r\n\r\n\r\n0.1036595\r\n\r\n\r\nLaRazon_Bolivia\r\n\r\n\r\n0.0057484\r\n\r\n\r\nCarmenEGonzale2\r\n\r\n\r\n0.0053971\r\n\r\n\r\nyeidckol\r\n\r\n\r\n0.0044487\r\n\r\n\r\nentrammbasaguas\r\n\r\n\r\n0.0038097\r\n\r\n\r\nJeanineAnez\r\n\r\n\r\n0.0036367\r\n\r\n\r\nAlmagro_OEA2015\r\n\r\n\r\n0.0033602\r\n\r\n\r\nJohnMAckerman\r\n\r\n\r\n0.0023502\r\n\r\n\r\nDiazCanelB\r\n\r\n\r\n0.0022066\r\n\r\n\r\nChalecosAmarill\r\n\r\n\r\n0.0020588\r\n\r\n\r\n\r\nTotal measures of popularity/status\r\n\r\n\r\n# NODES\r\ndegree.nodes<-data.frame(name=V(mt)$name,\r\n         totdegree=igraph::degree(mt, loops = TRUE), \r\n         indegree=igraph::degree(mt, loops = TRUE), \r\n         outdegree=igraph::degree(mt,loops = TRUE),\r\n          eigen <- centr_eigen(mt, directed=T),\r\n         bt)\r\n\r\narrange(degree.nodes, desc(indegree)) %>%\r\n  head() %>% \r\nkbl() %>%\r\nkable_material_dark(c(\"striped\", \"hover\")) %>% \r\nscroll_box(width = \"100%\", height = \"auto\")\r\n\r\n\r\n\r\n\r\n\r\n\r\nname\r\n\r\n\r\ntotdegree\r\n\r\n\r\nindegree\r\n\r\n\r\noutdegree\r\n\r\n\r\nvector\r\n\r\n\r\nvalue\r\n\r\n\r\noptions.bmat\r\n\r\n\r\noptions.n\r\n\r\n\r\noptions.which\r\n\r\n\r\noptions.nev\r\n\r\n\r\noptions.tol\r\n\r\n\r\noptions.ncv\r\n\r\n\r\noptions.ldv\r\n\r\n\r\noptions.ishift\r\n\r\n\r\noptions.maxiter\r\n\r\n\r\noptions.nb\r\n\r\n\r\noptions.mode\r\n\r\n\r\noptions.start\r\n\r\n\r\noptions.sigma\r\n\r\n\r\noptions.sigmai\r\n\r\n\r\noptions.info\r\n\r\n\r\noptions.iter\r\n\r\n\r\noptions.nconv\r\n\r\n\r\noptions.numop\r\n\r\n\r\noptions.numopb\r\n\r\n\r\noptions.numreo\r\n\r\n\r\ncentralization\r\n\r\n\r\ntheoretical_max\r\n\r\n\r\nbt\r\n\r\n\r\nevoespueblo\r\n\r\n\r\nevoespueblo\r\n\r\n\r\n2700\r\n\r\n\r\n2700\r\n\r\n\r\n2700\r\n\r\n\r\n1.0000000\r\n\r\n\r\n4.19761\r\n\r\n\r\nI\r\n\r\n\r\n5539\r\n\r\n\r\nLR\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n1000\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n2\r\n\r\n\r\n1\r\n\r\n\r\n29\r\n\r\n\r\n0\r\n\r\n\r\n29\r\n\r\n\r\n0.9998964\r\n\r\n\r\n5538\r\n\r\n\r\n0\r\n\r\n\r\nGiovannaZeball4\r\n\r\n\r\nGiovannaZeball4\r\n\r\n\r\n473\r\n\r\n\r\n473\r\n\r\n\r\n473\r\n\r\n\r\n0.0063064\r\n\r\n\r\n4.19761\r\n\r\n\r\nI\r\n\r\n\r\n5539\r\n\r\n\r\nLR\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n1000\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n2\r\n\r\n\r\n1\r\n\r\n\r\n29\r\n\r\n\r\n0\r\n\r\n\r\n29\r\n\r\n\r\n0.9998964\r\n\r\n\r\n5538\r\n\r\n\r\n0\r\n\r\n\r\nrayleon1515\r\n\r\n\r\nrayleon1515\r\n\r\n\r\n300\r\n\r\n\r\n300\r\n\r\n\r\n300\r\n\r\n\r\n0.0015024\r\n\r\n\r\n4.19761\r\n\r\n\r\nI\r\n\r\n\r\n5539\r\n\r\n\r\nLR\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n1000\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n2\r\n\r\n\r\n1\r\n\r\n\r\n29\r\n\r\n\r\n0\r\n\r\n\r\n29\r\n\r\n\r\n0.9998964\r\n\r\n\r\n5538\r\n\r\n\r\n86\r\n\r\n\r\nDAVlD51\r\n\r\n\r\nDAVlD51\r\n\r\n\r\n169\r\n\r\n\r\n169\r\n\r\n\r\n169\r\n\r\n\r\n0.0005272\r\n\r\n\r\n4.19761\r\n\r\n\r\nI\r\n\r\n\r\n5539\r\n\r\n\r\nLR\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n1000\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n2\r\n\r\n\r\n1\r\n\r\n\r\n29\r\n\r\n\r\n0\r\n\r\n\r\n29\r\n\r\n\r\n0.9998964\r\n\r\n\r\n5538\r\n\r\n\r\n0\r\n\r\n\r\nMonicaAparicioA\r\n\r\n\r\nMonicaAparicioA\r\n\r\n\r\n115\r\n\r\n\r\n115\r\n\r\n\r\n115\r\n\r\n\r\n0.0005835\r\n\r\n\r\n4.19761\r\n\r\n\r\nI\r\n\r\n\r\n5539\r\n\r\n\r\nLR\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n1000\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n2\r\n\r\n\r\n1\r\n\r\n\r\n29\r\n\r\n\r\n0\r\n\r\n\r\n29\r\n\r\n\r\n0.9998964\r\n\r\n\r\n5538\r\n\r\n\r\n113\r\n\r\n\r\nFranzRBarriosG\r\n\r\n\r\nFranzRBarriosG\r\n\r\n\r\n103\r\n\r\n\r\n103\r\n\r\n\r\n103\r\n\r\n\r\n0.0002780\r\n\r\n\r\n4.19761\r\n\r\n\r\nI\r\n\r\n\r\n5539\r\n\r\n\r\nLR\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n1\r\n\r\n\r\n1000\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n1\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n0\r\n\r\n\r\n2\r\n\r\n\r\n1\r\n\r\n\r\n29\r\n\r\n\r\n0\r\n\r\n\r\n29\r\n\r\n\r\n0.9998964\r\n\r\n\r\n5538\r\n\r\n\r\n0\r\n\r\n\r\n\r\nCommunities\r\nTo discover communities, the walktrap community detection method was used due to it handling weights, increasing the probability of it going towards its direction. Below is a visualization of the communities color coded by the walktrap method.\r\n\r\n\r\n# COMMUNITY\r\n\r\n#mt.eb <- cluster_edge_betweenness(mt) \r\n\r\nmt.wt <- walktrap.community(mt, weights = TRUE)\r\nmembership(mt.wt)[1:20]   #list only 10 nodes.\r\n\r\n\r\n     DFalconeti   joshua__frank  goffmansmasker    AleFerruzcaL \r\n              1               2               3               4 \r\n      SabatoFan Maryest66760646   yaciramendoza        _KevFal_ \r\n              5               6               7               8 \r\n         JpFair mundodedesigual        Nsnc2019        deborakr \r\n              9              10              11              12 \r\n        GDAEman   MarKaAbyaYala     quimogrande       Markbearz \r\n             13              14              15              16 \r\n     Gaby_Joy97 descuajeringado     Jckarlos521      Barry__Ale \r\n             17              18              19              20 \r\n\r\nrt <- mt\r\nV(rt)$color <- membership(mt.wt)\r\n\r\nkcorewt <- coreness(rt, mode=\"all\") \r\ntwocorewt <- induced_subgraph(rt, kcorewt>=2)\r\n\r\ngraph4 <- visIgraph(twocorewt,idToLabel = TRUE,layout = \"layout_nicely\") %>%\r\n  visOptions(highlightNearest = TRUE, nodesIdSelection = TRUE) \r\ngraph4\r\n\r\n\r\n\r\n\r\nInferential Statistics\r\nBy conditioning the transitivity (clustering) of the network on size, density, and dyads. We find that in 1,000 random networks, the variable number of nodes is able to produce a greater value than the observed graph’s transitivity.\r\nCUG PlotThis network graph has a low centralization score. Below it will be evaluated on indegree and outdegree vertices and conditioned on the variables size, density, and dyads. We find that in 1,000 random networks, none of the variables above were able to produce a value higher than the observed centralization score when based on indegree. However, the variable number of nodes was able to produce a greater value when evaluating for outdegrees.\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-05-14-bolivia/bolivia_files/figure-html5/unnamed-chunk-1-1.png",
    "last_modified": "2022-05-15T00:01:54-04:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-05-11-assignment8/",
    "title": "Assignment_8",
    "description": "Network Statistics (Marriages between characters in the Game of Thrones Novels).",
    "author": [
      {
        "name": "Walid Medani",
        "url": "https://walidmedani.github.io/networks-blog/"
      }
    ],
    "date": "2022-04-06",
    "categories": [],
    "contents": "\r\nInferential Stats\r\nLooking at a 1,000 random networks, transitivity has a random chance to produce a value greater than the observed value, on all three factors (size, edges, dyads), especially when considering the number of nodes.\r\n\r\n\r\ncug.t<-function(cug.object){\r\n  (cug.object$obs.stat-mean(cug.object$rep.stat))/sd(cug.object$rep.stat)\r\n}\r\n\r\ncugtransSize<-cug.test(gotmarr.mat,FUN=gtrans,mode=\"graph\",cmode=\"size\")\r\ncugtransSize\r\n\r\n\r\n\r\nUnivariate Conditional Uniform Graph Test\r\n\r\nConditioning Method: size \r\nGraph Type: graph \r\nDiagonal Used: FALSE \r\nReplications: 1000 \r\n\r\nObserved Value: 0.3787375 \r\nPr(X>=Obs): 0.99 \r\nPr(X<=Obs): 0.01 \r\n\r\ncugtransEdges<-cug.test(gotmarr.mat,FUN=gtrans,mode=\"graph\",cmode=\"edges\")\r\ncugtransEdges\r\n\r\n\r\n\r\nUnivariate Conditional Uniform Graph Test\r\n\r\nConditioning Method: edges \r\nGraph Type: graph \r\nDiagonal Used: FALSE \r\nReplications: 1000 \r\n\r\nObserved Value: 0.3787375 \r\nPr(X>=Obs): 0.066 \r\nPr(X<=Obs): 0.934 \r\n\r\ncugtransDyad<-cug.test(gotmarr.mat,FUN=gtrans,mode=\"graph\",cmode=\"dyad.census\")\r\ncugtransDyad\r\n\r\n\r\n\r\nUnivariate Conditional Uniform Graph Test\r\n\r\nConditioning Method: dyad.census \r\nGraph Type: graph \r\nDiagonal Used: FALSE \r\nReplications: 1000 \r\n\r\nObserved Value: 0.3787375 \r\nPr(X>=Obs): 0.061 \r\nPr(X<=Obs): 0.939 \r\n\r\ncug.t(cugtransSize)\r\n\r\n\r\n[1] -2.424939\r\n\r\ncug.t(cugtransEdges)\r\n\r\n\r\n[1] 1.473769\r\n\r\ncug.t(cugtransDyad)\r\n\r\n\r\n[1] 1.473727\r\n\r\npar(mfrow=c(1,3))\r\nplot(cugtransSize, main=\"Transitivity \\nConditioned on Size\" )\r\nplot(cugtransEdges, main=\"Transitivity \\nConditioned on Edges\" )\r\nplot(cugtransDyad, main=\"Transitivity \\nConditioned on Dyads\" )\r\n\r\n\r\n\r\npar(mfrow=c(1,1))\r\n\r\n\r\n\r\nLooking at a 1,000 random networks, betweenness has a random chance to produce a value greater than the observed value when compared to the properties edges and dyads. However, the property size was unable to generate a value higher than the observed betweenness score.\r\n\r\n\r\ncug.t<-function(cug.object){\r\n  (cug.object$obs.stat-mean(cug.object$rep.stat))/sd(cug.object$rep.stat)\r\n}\r\n\r\ncugbetSize<-cug.test(gotmarr.mat,FUN=centralization, FUN.arg=list(FUN=betweenness, cmode=\"undirected\"), mode=\"graph\",cmode=\"size\")\r\ncugbetSize\r\n\r\n\r\n\r\nUnivariate Conditional Uniform Graph Test\r\n\r\nConditioning Method: size \r\nGraph Type: graph \r\nDiagonal Used: FALSE \r\nReplications: 1000 \r\n\r\nObserved Value: 0.2765138 \r\nPr(X>=Obs): 0 \r\nPr(X<=Obs): 1 \r\n\r\ncugbetEdges<-cug.test(gotmarr.mat,FUN=centralization, FUN.arg=list(FUN=betweenness, cmode=\"undirected\"), mode=\"graph\",cmode=\"edges\")\r\ncugbetEdges\r\n\r\n\r\n\r\nUnivariate Conditional Uniform Graph Test\r\n\r\nConditioning Method: edges \r\nGraph Type: graph \r\nDiagonal Used: FALSE \r\nReplications: 1000 \r\n\r\nObserved Value: 0.2765138 \r\nPr(X>=Obs): 0 \r\nPr(X<=Obs): 1 \r\n\r\ncugbetDyad<-cug.test(gotmarr.mat,FUN=centralization, FUN.arg=list(FUN=betweenness, cmode=\"undirected\"), mode=\"graph\",cmode=\"dyad\")\r\ncugbetDyad\r\n\r\n\r\n\r\nUnivariate Conditional Uniform Graph Test\r\n\r\nConditioning Method: dyad.census \r\nGraph Type: graph \r\nDiagonal Used: FALSE \r\nReplications: 1000 \r\n\r\nObserved Value: 0.2765138 \r\nPr(X>=Obs): 0 \r\nPr(X<=Obs): 1 \r\n\r\ncug.t(cugbetSize)\r\n\r\n\r\n[1] 12.00625\r\n\r\ncug.t(cugbetEdges)\r\n\r\n\r\n[1] 4.697649\r\n\r\ncug.t(cugbetDyad)\r\n\r\n\r\n[1] 4.76025\r\n\r\npar(mfrow=c(1,3))\r\nplot(cugbetSize, main=\"Betweenness \\nConditioned on Size\" )\r\nplot(cugbetEdges, main=\"Betweenness \\nConditioned on Edges\" )\r\nplot(cugbetDyad, main=\"Betweenness \\nConditioned on Dyads\" )\r\n\r\n\r\n\r\npar(mfrow=c(1,1))\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-05-11-assignment8/assignment8_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-05-15T01:38:46-04:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-24-assignment7/",
    "title": "Assignment_7",
    "description": "Community Detection (Marriages between characters in the Game of Thrones Novels)",
    "author": [
      {
        "name": "Walid Medani",
        "url": "https://walidmedani.github.io/networks-blog/"
      }
    ],
    "date": "2022-03-24",
    "categories": [],
    "contents": "\r\nGame of Thrones Marriages\r\n\r\n\r\nplot.igraph(gotmarr.ig, \r\n            vertex.label.cex=1)\r\n\r\n\r\n\r\n\r\nNetwork Size\r\n\r\n\r\nvcount(gotmarr.ig)\r\n\r\n\r\n[1] 18\r\n\r\necount(gotmarr.ig)\r\n\r\n\r\n[1] 61\r\n\r\nAttributes\r\n\r\n\r\nis_bipartite(gotmarr.ig)\r\n\r\n\r\n[1] FALSE\r\n\r\nis_directed(gotmarr.ig)\r\n\r\n\r\n[1] FALSE\r\n\r\nis_weighted(gotmarr.ig)\r\n\r\n\r\n[1] TRUE\r\n\r\nvertex_attr_names(gotmarr.ig)\r\n\r\n\r\n[1] \"color\"        \"na\"           \"region\"       \"vertex.names\"\r\n[5] \"name\"        \r\n\r\nedge_attr_names(gotmarr.ig)\r\n\r\n\r\n[1] \"na\"     \"weight\"\r\n\r\nCommunity Detection\r\nFast and greedy\r\n\r\n\r\n#Run clustering algorithm: fast_greedy\r\ngot.fg<-cluster_fast_greedy(gotmarr.ig)\r\n#Retrieve list of nodes in communities\r\nigraph::groups(got.fg)\r\n\r\n\r\n$`1`\r\n[1] \"Arryn\" \"Tully\" \"Vale\" \r\n\r\n$`2`\r\n[1] \"Martell\"    \"Crownlands\" \"Essos\"      \"Targaryen\"  \"Dorne\"     \r\n\r\n$`3`\r\n[1] \"Baratheon\" \"Reach\"     \"Tyrell\"   \r\n\r\n$`4`\r\n[1] \"Stormlands\" \"Riverlands\" \"Frey\"      \r\n\r\n$`5`\r\n[1] \"Lannister\"   \"Westerlands\"\r\n\r\n$`6`\r\n[1] \"Stark\" \"North\"\r\n\r\nplot(got.fg,gotmarr.ig)\r\n\r\n\r\n\r\n\r\nWalktrap\r\n\r\n\r\nnodes.by.gp<-function(network.nodes, groupvar){\r\n  network.nodes%>%\r\n  select(-name)%>%\r\n  group_by_(groupvar) %>%\r\n  mutate(n=n())%>%\r\n  summarise_all(mean, na.rm=TRUE)%>%\r\n  as.matrix()%>%\r\n  print(digits=2)\r\n}\r\n\r\n\r\ngot.wt<-walktrap.community(gotmarr.ig)\r\nigraph::groups(got.wt)\r\n\r\n\r\n$`1`\r\n[1] \"Arryn\"      \"Tully\"      \"Vale\"       \"Stormlands\" \"Riverlands\"\r\n[6] \"Frey\"      \r\n\r\n$`2`\r\n[1] \"Martell\"    \"Crownlands\" \"Essos\"      \"Targaryen\"  \"Dorne\"     \r\n\r\n$`3`\r\n[1] \"Baratheon\" \"Reach\"     \"Tyrell\"   \r\n\r\n$`4`\r\n[1] \"Stark\" \"North\"\r\n\r\n$`5`\r\n[1] \"Lannister\"   \"Westerlands\"\r\n\r\ngotmarr.nodes$comm.wt<-got.wt$membership\r\nnodes.by.gp(gotmarr.nodes,\"comm.wt\")\r\n\r\n\r\n     comm.wt degree degree.wt bonpow betweenness close constraint n\r\n[1,]       1    5.5        23  -1.31         4.5  0.58       0.41 6\r\n[2,]       2    5.2        22  -0.79         9.3  0.57       0.62 5\r\n[3,]       3    6.0        22  -0.96         8.9  0.59       0.45 3\r\n[4,]       4    6.0        36  -0.29         6.9  0.59       0.53 2\r\n[5,]       5    5.5        25  -0.15         1.4  0.58       0.57 2\r\n\r\nplot(got.wt,gotmarr.ig)\r\n\r\n\r\n\r\n\r\nLabel Propagation\r\n\r\n\r\ngot.lab<-walktrap.community(gotmarr.ig)\r\nigraph::groups(got.lab)\r\n\r\n\r\n$`1`\r\n[1] \"Arryn\"      \"Tully\"      \"Vale\"       \"Stormlands\" \"Riverlands\"\r\n[6] \"Frey\"      \r\n\r\n$`2`\r\n[1] \"Martell\"    \"Crownlands\" \"Essos\"      \"Targaryen\"  \"Dorne\"     \r\n\r\n$`3`\r\n[1] \"Baratheon\" \"Reach\"     \"Tyrell\"   \r\n\r\n$`4`\r\n[1] \"Stark\" \"North\"\r\n\r\n$`5`\r\n[1] \"Lannister\"   \"Westerlands\"\r\n\r\ngotmarr.nodes$comm.lab<-got.lab$membership\r\nnodes.by.gp(gotmarr.nodes,\"comm.lab\")\r\n\r\n\r\n     comm.lab degree degree.wt bonpow betweenness close constraint\r\n[1,]        1    5.5        23  -1.31         4.5  0.58       0.41\r\n[2,]        2    5.2        22  -0.79         9.3  0.57       0.62\r\n[3,]        3    6.0        22  -0.96         8.9  0.59       0.45\r\n[4,]        4    6.0        36  -0.29         6.9  0.59       0.53\r\n[5,]        5    5.5        25  -0.15         1.4  0.58       0.57\r\n     comm.wt n\r\n[1,]       1 6\r\n[2,]       2 5\r\n[3,]       3 3\r\n[4,]       4 2\r\n[5,]       5 2\r\n\r\nplot(got.lab,gotmarr.ig)\r\n\r\n\r\n\r\n\r\nEdge betweeness\r\n\r\n\r\ngot.edge<-edge.betweenness.community(gotmarr.ig)\r\nigraph::groups(got.edge)\r\n\r\n\r\n$`1`\r\n[1] \"Arryn\"\r\n\r\n$`2`\r\n[1] \"Tully\"\r\n\r\n$`3`\r\n[1] \"Vale\"\r\n\r\n$`4`\r\n[1] \"Baratheon\"\r\n\r\n$`5`\r\n[1] \"Lannister\"\r\n\r\n$`6`\r\n[1] \"Martell\"\r\n\r\n$`7`\r\n[1] \"Reach\"\r\n\r\n$`8`\r\n[1] \"Stark\"\r\n\r\n$`9`\r\n[1] \"Stormlands\"\r\n\r\n$`10`\r\n[1] \"Tyrell\"\r\n\r\n$`11`\r\n[1] \"Crownlands\"\r\n\r\n$`12`\r\n[1] \"Essos\"\r\n\r\n$`13`\r\n[1] \"Riverlands\"\r\n\r\n$`14`\r\n[1] \"Westerlands\"\r\n\r\n$`15`\r\n[1] \"Frey\"\r\n\r\n$`16`\r\n[1] \"North\"\r\n\r\n$`17`\r\n[1] \"Targaryen\"\r\n\r\n$`18`\r\n[1] \"Dorne\"\r\n\r\ngotmarr.nodes$comm.edge<-got.edge$membership\r\nnodes.by.gp(gotmarr.nodes,\"comm.edge\")\r\n\r\n\r\n      comm.edge degree degree.wt bonpow betweenness close constraint\r\n [1,]         1      3        10 -1.113        0.67  0.50       0.51\r\n [2,]         2      5         5 -1.042        2.31  0.53       0.48\r\n [3,]         3      5        34 -1.085        2.51  0.57       0.36\r\n [4,]         4      7        10 -0.757       10.86  0.63       0.38\r\n [5,]         5      5        22 -0.086        0.89  0.55       0.65\r\n [6,]         6      3         8 -0.699        0.75  0.52       0.74\r\n [7,]         7      9        46 -1.442       15.76  0.68       0.32\r\n [8,]         8      9        33  0.057       13.56  0.68       0.40\r\n [9,]         9      4        10 -1.941        0.62  0.57       0.41\r\n[10,]        10      2        11 -0.685        0.00  0.45       0.66\r\n[11,]        11      6        17 -0.514        1.80  0.59       0.50\r\n[12,]        12      4        10 -0.956        2.15  0.55       0.70\r\n[13,]        13      6        32 -1.171        2.85  0.61       0.46\r\n[14,]        14      6        28 -0.214        1.97  0.61       0.49\r\n[15,]        15     10        48 -1.513       17.98  0.68       0.24\r\n[16,]        16      3        39 -0.628        0.31  0.50       0.65\r\n[17,]        17     12        73 -1.256       42.02  0.77       0.18\r\n[18,]        18      1         2 -0.500        0.00  0.45       1.00\r\n      comm.wt comm.lab n\r\n [1,]       1        1 1\r\n [2,]       1        1 1\r\n [3,]       1        1 1\r\n [4,]       3        3 1\r\n [5,]       5        5 1\r\n [6,]       2        2 1\r\n [7,]       3        3 1\r\n [8,]       4        4 1\r\n [9,]       1        1 1\r\n[10,]       3        3 1\r\n[11,]       2        2 1\r\n[12,]       2        2 1\r\n[13,]       1        1 1\r\n[14,]       5        5 1\r\n[15,]       1        1 1\r\n[16,]       4        4 1\r\n[17,]       2        2 1\r\n[18,]       2        2 1\r\n\r\nplot(got.edge,gotmarr.ig)\r\n\r\n\r\n\r\n\r\nEigenvector\r\n\r\n\r\ngot.eigen<-leading.eigenvector.community(gotmarr.ig)\r\nigraph::groups(got.eigen)\r\n\r\n\r\n$`1`\r\n[1] \"Arryn\"      \"Baratheon\"  \"Martell\"    \"Stormlands\" \"Crownlands\"\r\n[6] \"Essos\"      \"Targaryen\"  \"Dorne\"     \r\n\r\n$`2`\r\n[1] \"Tully\"      \"Vale\"       \"Riverlands\" \"Frey\"      \r\n\r\n$`3`\r\n[1] \"Reach\"\r\n\r\n$`4`\r\n[1] \"Stark\" \"North\"\r\n\r\n$`5`\r\n[1] \"Lannister\"   \"Westerlands\"\r\n\r\n$`6`\r\n[1] \"Tyrell\"\r\n\r\ngotmarr.nodes$comm.eigen<-got.eigen$membership\r\nnodes.by.gp(gotmarr.nodes,\"comm.eigen\")\r\n\r\n\r\n     comm.eigen degree degree.wt bonpow betweenness close constraint\r\n[1,]          1    5.0        18  -0.97         7.4  0.57       0.55\r\n[2,]          2    6.5        30  -1.20         6.4  0.60       0.38\r\n[3,]          3    9.0        46  -1.44        15.8  0.68       0.32\r\n[4,]          4    6.0        36  -0.29         6.9  0.59       0.53\r\n[5,]          5    5.5        25  -0.15         1.4  0.58       0.57\r\n[6,]          6    2.0        11  -0.69         0.0  0.45       0.66\r\n     comm.wt comm.lab comm.edge n\r\n[1,]     1.9      1.9       9.8 8\r\n[2,]     1.0      1.0       8.2 4\r\n[3,]     3.0      3.0       7.0 1\r\n[4,]     4.0      4.0      12.0 2\r\n[5,]     5.0      5.0       9.5 2\r\n[6,]     3.0      3.0      10.0 1\r\n\r\nplot(got.eigen,gotmarr.ig)\r\n\r\n\r\n\r\n\r\nModularity Scores\r\n\r\nfastgreedy   walktrap      label       edge      eigen \r\n 0.5173683  0.3289444  0.3289444  0.2051354  0.4572361 \r\n\r\nObservations\r\nFor the GOT marriages data set, the fast/greedy, walktrap, and label propagation made the most sense in identifying communities. Fast and greedy was the most successful method due to it partitioning “Baratheon”, “Reach”, and “Tyrell” as a separate community from the northern kingdoms of “Tully” and “Arryn” where there was a weak or no relationship between the factions.\r\nEdge betweeness failed to identify any communities within the dataset, whereas the Eigenvector failed to cluster some memberships such as the Reach being distinct from the Tyrell family (rulers of the region) and has strong marriage connections with the Baratheons.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-24-assignment7/assignment7_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-03-31T16:55:34-04:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-10-assignment6/",
    "title": "Assignment_6",
    "description": "Roles and Blockmodels (Marriages between characters in the Game of Thrones Novels)",
    "author": [
      {
        "name": "Walid Medani",
        "url": "https://walidmedani.github.io/networks-blog/"
      }
    ],
    "date": "2022-03-10",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n\r\n\r\n\r\nGame of Thrones Marriages\r\n\r\n\r\nplot.igraph(gotmarr.ig, \r\n            vertex.label.cex=1)\r\n\r\n\r\n\r\n\r\nNetwork Size\r\n\r\n\r\nvcount(gotmarr.ig)\r\n\r\n\r\n[1] 18\r\n\r\necount(gotmarr.ig)\r\n\r\n\r\n[1] 61\r\n\r\nAttributes\r\n\r\n\r\nis_bipartite(gotmarr.ig)\r\n\r\n\r\n[1] FALSE\r\n\r\nis_directed(gotmarr.ig)\r\n\r\n\r\n[1] FALSE\r\n\r\nis_weighted(gotmarr.ig)\r\n\r\n\r\n[1] TRUE\r\n\r\nvertex_attr_names(gotmarr.ig)\r\n\r\n\r\n[1] \"color\"        \"na\"           \"region\"       \"vertex.names\"\r\n[5] \"name\"        \r\n\r\nedge_attr_names(gotmarr.ig)\r\n\r\n\r\n[1] \"na\"     \"weight\"\r\n\r\nCentrality Measures\r\nBetweenness Centrality\r\n\r\n\r\nigraph::betweenness(gotmarr.ig, directed=TRUE)\r\n\r\n\r\n      Arryn       Tully        Vale   Baratheon   Lannister \r\n   0.000000   32.222222    0.000000   37.038889    2.705556 \r\n    Martell       Reach       Stark  Stormlands      Tyrell \r\n   1.250000   21.988889   52.366667    0.000000    0.000000 \r\n Crownlands       Essos  Riverlands Westerlands        Frey \r\n   8.000000    2.833333    0.000000   12.358333    7.063889 \r\n      North   Targaryen       Dorne \r\n   0.000000   16.569444    0.000000 \r\n\r\nBetweeness Centralization\r\n\r\n\r\ncentr_betw(gotmarr.ig,directed=T)$centralization\r\n\r\n\r\n[1] 0.2765138\r\n\r\nCloseness Centralization\r\n\r\n\r\ncentr_clo(gotmarr.ig)$centralization\r\n\r\n\r\n[1] 0.4240252\r\n\r\nStructural Equivalance\r\n\r\n\r\ngotmarr.nodes<-data.frame(name=gotmarr.stat%v%\"vertex.names\",\r\n        degree=sna::degree(gotmarr.stat,gmode=\"graph\"),\r\n        degree.wt=strength(gotmarr.ig),\r\n        bonpow=bonpow(gotmarr.stat),\r\n        betweenness=betweenness(gotmarr.stat, gmode=\"graph\"),\r\n        close=sna::closeness(gotmarr.stat, gmode=\"graph\"),\r\n        constraint=constraint(gotmarr.ig))\r\n\r\n#got partners\r\ngotmarr.se<-equiv.clust(gotmarr.stat, equiv.fun=\"sedist\", method=\"hamming\",mode=\"graph\")\r\n\r\n#plot equivalence clustering\r\nplot(gotmarr.se,labels=gotmarr.se$glabels)\r\nrect.hclust(gotmarr.se$cluster,h=15)\r\n\r\n\r\n\r\n\r\n\r\n\r\nplot.block<-function(x=blk_mod, main=NULL, cex.lab=1){\r\n  plot.sociomatrix(x$blocked.data, labels=list(x$plabels,x$plabels),\r\n                   main=main, drawlines = FALSE, cex.lab=cex.lab)\r\n  for (j in 2:length(x$plabels)) if (x$block.membership[j] !=\r\n                                     x$block.membership[j-1]) \r\n    abline(v = j - 0.5, h = j - 0.5, lty = 3, xpd=FALSE)\r\n}\r\n\r\n#blockmodel and select partitions\r\nblk_mod<-blockmodel(gotmarr.stat,gotmarr.se,k=4)\r\n#print blockmodel object\r\nblk_mod$block.model\r\n\r\n\r\n           Block 1    Block 2   Block 3   Block 4\r\nBlock 1 0.40000000 0.04166667 0.6666667 0.8333333\r\nBlock 2 0.04166667 0.17857143 0.5000000 0.6250000\r\nBlock 3 0.66666667 0.50000000 0.3333333 0.6666667\r\nBlock 4 0.83333333 0.62500000 0.6666667       NaN\r\n\r\n#plot blockmodel partitions\r\nplot.block(blk_mod,main=\"GoT Marriages, 4 Partitions\", cex.lab=.5)\r\n\r\n\r\n\r\n#blockmodel and select partitions\r\nblk_mod2<-blockmodel(gotmarr.stat,gotmarr.se,k=6)\r\n#print blockmodel object\r\nblk_mod2$block.model\r\n\r\n\r\n           Block 1    Block 2    Block 3   Block 4   Block 5\r\nBlock 1 0.40000000 0.03333333 0.05555556 0.3333333 0.8333333\r\nBlock 2 0.03333333 0.30000000 0.06666667 1.0000000 0.6000000\r\nBlock 3 0.05555556 0.06666667 0.33333333 0.0000000 0.1666667\r\nBlock 4 0.33333333 1.00000000 0.00000000       NaN 0.5000000\r\nBlock 5 0.83333333 0.60000000 0.16666667 0.5000000 0.0000000\r\nBlock 6 0.83333333 0.40000000 1.00000000 1.0000000 0.5000000\r\n          Block 6\r\nBlock 1 0.8333333\r\nBlock 2 0.4000000\r\nBlock 3 1.0000000\r\nBlock 4 1.0000000\r\nBlock 5 0.5000000\r\nBlock 6       NaN\r\n\r\n#plot blockmodel partitions\r\nplot.block(blk_mod2,main=\"GoT Marriages, 6 Partitions\", cex.lab=.5)\r\n\r\n\r\n\r\n\r\nPlotting the block role assignments gives us easy insight into observing marriages between the houses. We see that eastern continents and houses didn’t have many marriage connections between northern houses such as Tully, Vale, and Arryn yet they do with other northern houses such as the Starks and Frey.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-10-assignment6/assignment6_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-04-01T00:23:20-04:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-03-02-assignment5/",
    "title": "Assignment_5",
    "description": "Structural Holes\nauthor:\n- name: Walid Medani\n  url: https://walidmedani.github.io/networks-blog/",
    "author": [],
    "date": "2022-03-02",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\nGame of Thrones Like/Dislike\r\n\r\n\r\n\r\nNetwork Size\r\n\r\n[1] 11\r\n[1] 46\r\n\r\nAttributes\r\n\r\n[1] FALSE\r\n[1] TRUE\r\n[1] FALSE\r\n[1] \"name\"\r\n [1] \"Name\"                  \"Lysa.Arryn\"           \r\n [3] \"Petyr.Baelish\"         \"Joffrey.Baratheon\"    \r\n [5] \"Margaery.Tyrell\"       \"Renly.Baratheon\"      \r\n [7] \"Robert.Baratheon\"      \"Stannis.Baratheon\"    \r\n [9] \"Brienne.of.Tarth\"      \"Bronn\"                \r\n[11] \"Gregor.Clegane\"        \"Sandor.Clegane\"       \r\n[13] \"Xaro.Xhoan.Daxos\"      \"Gendry\"               \r\n[15] \"Balon.Greyjoy\"         \"Theon.Greyjoy\"        \r\n[17] \"Jaqen.H.ghar\"          \"Hodor\"                \r\n[19] \"Khal.Drogo\"            \"Cersei.Lannister\"     \r\n[21] \"Jaime.Lannister\"       \"Lancel.Lannister\"     \r\n[23] \"Tyrion.Lannister\"      \"Tywin.Lannister\"      \r\n[25] \"Maester.Luwin\"         \"Melisandre\"           \r\n[27] \"Jeor.Mormont\"          \"Jorah.Mormont\"        \r\n[29] \"Osha\"                  \"Podrick.Payne\"        \r\n[31] \"Pyat.Pree\"             \"Grand.Maester.Pycelle\"\r\n[33] \"Ros\"                   \"Davos.Seaworth\"       \r\n[35] \"Shae\"                  \"Jon.Snow\"             \r\n[37] \"Arya.Stark\"            \"Bran.Stark\"           \r\n[39] \"Catelyn.Stark\"         \"Robb.Stark\"           \r\n[41] \"Sansa.Stark\"           \"Daenerys.Targaryen\"   \r\n[43] \"Viserys.Targaryen\"     \"Samwell.Tarly\"        \r\n[45] \"Loras.Tyrell\"          \"Varys\"                \r\n[47] \"Eddard.Stark\"         \r\n\r\nCentrality Measures\r\nBetweenness Centrality\r\n\r\n        Arryn       Baelish     Lannister        Tyrell     Baratheon \r\n            0             0             0             0             0 \r\n        Stark                     Greyjoy Night's Watch     Targaryen \r\n            1             5             0             0             0 \r\n        Tully \r\n            0 \r\n\r\nEdge Betweeness plot\r\n\r\n\r\n\r\nBetweeness Centralization\r\n\r\n[1] 0.05444444\r\n\r\nCloseness Centralization\r\n\r\n[1] 0.03548935\r\n\r\nNetwork Constraint\r\n\r\n    Arryn   Baelish Lannister    Tyrell Baratheon     Stark \r\n1.0000000 1.0000000 0.9917431 1.0436180 0.9977808 0.8002717 \r\n\r\nGould-Fernandez Brokerage\r\n\r\n                     w_I        w_O       b_IO       b_OI       b_O\r\nArryn                NaN -0.9759951 -0.6715120 -0.6715120 -1.561299\r\nBaelish              NaN -0.9759951 -0.6715120 -0.6715120 -1.561299\r\nLannister            NaN -0.9759951 -0.6715120 -0.6715120 -1.561299\r\nTyrell        -0.4759641 -0.8243941 -0.8953493 -0.8953493 -1.458012\r\nBaratheon            NaN -1.0836066        NaN        NaN -1.672677\r\nStark                NaN -0.9759951 -0.6715120 -0.6715120 -1.313798\r\n                     NaN -1.0836066        NaN        NaN  1.910340\r\nGreyjoy       -0.4759641 -0.8243941 -0.8953493 -0.8953493 -1.458012\r\nNight's Watch        NaN -0.9759951 -0.6715120 -0.6715120 -1.561299\r\nTargaryen            NaN -0.9759951 -0.6715120 -0.6715120 -1.561299\r\nTully         -0.4759641 -0.8243941 -0.8953493 -0.8953493 -1.458012\r\n                      t\r\nArryn         -1.701438\r\nBaelish       -1.701438\r\nLannister     -1.701438\r\nTyrell        -1.701438\r\nBaratheon     -1.701438\r\nStark         -1.515633\r\n               1.457237\r\nGreyjoy       -1.701438\r\nNight's Watch -1.701438\r\nTargaryen     -1.701438\r\nTully         -1.701438\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-03-02-assignment5/assignment5_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-03-02T23:00:56-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-16-assignment4/",
    "title": "Assignment_4",
    "description": "Status and Eigenvector (https://correlatesofwar.org/data-sets/MIDs)",
    "author": [
      {
        "name": "Walid Medani",
        "url": "https://walidmedani.github.io/networks-blog/"
      }
    ],
    "date": "2022-02-16",
    "categories": [],
    "contents": "\r\nNetwork Graph\r\n\r\n\r\n\r\nDescription\r\nThere are 156 nodes within the militarized interstate dispute dataset. Edges are undirected and are defined as instances of when one state threatened, displayed, or used force directed towards the government, official representatives, official forces, property, or territory of another state.\r\nNetwork Density & Degree Centralization\r\n\r\n[1] 0.1136476\r\n$res\r\n  [1] 74 56 64 60 47 63 53 51 58 55 43 59 46 62 17 22 20 63 23 36  2\r\n [22] 37  4 39 15  5  2  3  5  8  2 17  4  4  3  1  3  3  2  1  1  7\r\n [43] 41  7 13  8  5  8  8 33  5 12  3 36 23 39  2 19  6 18  6 18  7\r\n [64]  8  5  1  2 12  8  2  8 21  2  1  8 10  4  4  1  3  5 45 45 34\r\n [85] 47 54  2  7  1  1  3  2  7 45 46 45 45  1  1  1  2  1  1  1 36\r\n[106]  1  1  2 26  9  1  1  1  1  4  5  5 19 19 53 53 42  2  2  3  1\r\n[127]  7 37 37 44 38 37 44 44 37 44  3  1  3  1  1  1  1  1  3  1  1\r\n[148]  1  1  2  1  2  2 33 33  1\r\n\r\n$centralization\r\n[1] 0.3637717\r\n\r\n$theoretical_max\r\n[1] 24180\r\n\r\n\r\n    name degree\r\nUSA  USA     74\r\nUKG  UKG     64\r\nFRN  FRN     63\r\nRUS  RUS     63\r\nTUR  TUR     62\r\nNTH  NTH     60\r\n     name               degree     \r\n Length:156         Min.   : 1.00  \r\n Class :character   1st Qu.: 2.00  \r\n Mode  :character   Median : 7.00  \r\n                    Mean   :17.62  \r\n                    3rd Qu.:36.25  \r\n                    Max.   :74.00  \r\n\r\n\r\nCentrality Measures\r\nCloseness Centraility\r\n\r\n         USA          CAN          UKG          NTH          BEL \r\n6.082355e-05 6.068329e-05 5.990894e-05 6.071645e-05 5.998081e-05 \r\n         FRN \r\n6.110975e-05 \r\n\r\nBetweenness Centrality\r\n\r\n      USA       CAN       UKG       NTH       BEL       FRN \r\n1543.1492  199.5687  295.0000  124.3906  345.1667 3030.5423 \r\n\r\n\r\nEigen Centrality\r\n\r\n[1] 1.0000000 0.9302363 0.9867230 0.9781763 0.8832846 0.9820892\r\n[1] 0.7215986\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-16-assignment4/assignment4_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-02-16T21:12:36-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-07-assignment3/",
    "title": "Assignment_3",
    "description": "Degree and Centrality. (https://correlatesofwar.org/data-sets/MIDs)",
    "author": [
      {
        "name": "Walid Medani",
        "url": "https://walidmedani.github.io/networks-blog/"
      }
    ],
    "date": "2022-02-07",
    "categories": [],
    "contents": "\r\nNetwork Graph\r\n\r\n\r\n\r\nDescription\r\nThere are 156 nodes within the militarized interstate dispute dataset. Edges are undirected and are defined as instances of when one state threatened, displayed, or used force directed towards the government, official representatives, official forces, property, or territory of another state.\r\nNetwork Density & Centralization\r\n\r\n[1] 0.1136476\r\n$res\r\n  [1] 74 56 64 60 47 63 53 51 58 55 43 59 46 62 17 22 20 63 23 36  2\r\n [22] 37  4 39 15  5  2  3  5  8  2 17  4  4  3  1  3  3  2  1  1  7\r\n [43] 41  7 13  8  5  8  8 33  5 12  3 36 23 39  2 19  6 18  6 18  7\r\n [64]  8  5  1  2 12  8  2  8 21  2  1  8 10  4  4  1  3  5 45 45 34\r\n [85] 47 54  2  7  1  1  3  2  7 45 46 45 45  1  1  1  2  1  1  1 36\r\n[106]  1  1  2 26  9  1  1  1  1  4  5  5 19 19 53 53 42  2  2  3  1\r\n[127]  7 37 37 44 38 37 44 44 37 44  3  1  3  1  1  1  1  1  3  1  1\r\n[148]  1  1  2  1  2  2 33 33  1\r\n\r\n$centralization\r\n[1] 0.3637717\r\n\r\n$theoretical_max\r\n[1] 24180\r\n\r\nDegrees\r\n\r\n    name degree\r\nUSA  USA     74\r\nUKG  UKG     64\r\nFRN  FRN     63\r\nRUS  RUS     63\r\nTUR  TUR     62\r\nNTH  NTH     60\r\n     name               degree     \r\n Length:156         Min.   : 1.00  \r\n Class :character   1st Qu.: 2.00  \r\n Mode  :character   Median : 7.00  \r\n                    Mean   :17.62  \r\n                    3rd Qu.:36.25  \r\n                    Max.   :74.00  \r\n\r\n\r\nResults\r\nUSA, UK, France, Russia, and Turkey are some of the most central nodes within the dataset. Whereas Tunisia, Kosovo, Jamaica, Sri Lanka, and Nepal are the lowest central nodes. The network density is low (.11) with not many actual connections despite the portion of potential connections. With a centralization score of .36, ties of the network aren’t too concentrated on a group of actors.\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-07-assignment3/assignment3_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-02-16T21:13:36-05:00",
    "input_file": {}
  },
  {
    "path": "posts/2022-02-02-assignment2/",
    "title": "Assignment_2",
    "description": "Network of militarized interstate disputes from 1870 to 2014. (https://correlatesofwar.org/data-sets/MIDs)",
    "author": [
      {
        "name": "Walid Medani",
        "url": "https://walidmedani.github.io/networks-blog/"
      }
    ],
    "date": "2022-02-02",
    "categories": [],
    "contents": "\r\nNetwork Graph\r\n\r\n\r\n\r\nNetwork Size\r\n\r\n[1] 156\r\n[1] 1374\r\n\r\nAttributes\r\n\r\n[1] FALSE\r\n[1] FALSE\r\n[1] TRUE\r\n[1] \"name\"\r\n[1] \"weight\"\r\n\r\nNetwork isn’t bipartite nor directed however it is weighted.\r\nDyad & Triad Census\r\n\r\n$mut\r\n[1] 1374\r\n\r\n$asym\r\n[1] 0\r\n\r\n$null\r\n[1] 10716\r\n [1] 449446      0 144438      0      0      0      0      0      0\r\n[10]      0  13050      0      0      0      0  13686\r\n[1] 620620\r\n# A tibble: 1 x 3\r\n    Mut  Asym  Null\r\n  <dbl> <dbl> <dbl>\r\n1  1374     0 10716\r\n# A tibble: 1 x 5\r\n  Triad0 Triad1 Triad2 Triad3 Triadsum\r\n   <dbl>  <dbl>  <dbl>  <dbl>    <dbl>\r\n1 449446 144438  13050  13686   620620\r\n\r\nTransivity\r\n\r\n[1] 0.7588157\r\n[1] 0.6456076\r\n\r\nGlobal transivity shows a proportion of .76 of completely connected triads within the network and the density of the ego network is .65.\r\nGeodesic & Component structure\r\n\r\n[1] 3.038289\r\n[1] 4\r\n[1] 150   2   2   2\r\n\r\nThere are 4 components with the first comprising of 150 members and the next 3 components having only 2 members each.\r\nNetwork density\r\n\r\n[1] 0.1136476\r\n\r\n\r\n\r\n\r\n",
    "preview": "posts/2022-02-02-assignment2/assignment2_files/figure-html5/unnamed-chunk-3-1.png",
    "last_modified": "2022-02-08T11:37:05-05:00",
    "input_file": {}
  },
  {
    "path": "posts/welcome/",
    "title": "Welcome to Walid Medani",
    "description": "Welcome to our new blog, Walid Medani. We hope you enjoy \nreading what we have to say!",
    "author": [
      {
        "name": "Nora Jones",
        "url": "https://example.com/norajones"
      }
    ],
    "date": "2022-02-02",
    "categories": [],
    "contents": "\r\n\r\n\r\n\r\n",
    "preview": {},
    "last_modified": "2022-02-02T04:02:52-05:00",
    "input_file": {}
  }
]
